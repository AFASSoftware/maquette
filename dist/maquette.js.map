{"version":3,"sources":["maquette.js","../../../../src/maquette.ts"],"names":["Object","defineProperty","exports","value","NAMESPACE_W3","NAMESPACE_SVG","NAMESPACE_XLINK","emptyArray","extend","base","overrides","result","keys","forEach","key","same","vnode1","vnode2","vnodeSelector","properties","bind","toTextVNode","data","undefined","children","text","toString","domNode","appendChildren","parentSelector","insertions","main","i","length_1","length","item","Array","isArray","hasOwnProperty","push","missingTransition","Error","DEFAULT_PROJECTION_OPTIONS","namespace","eventHandlerInterceptor","styleApplyer","styleName","style","transitions","enter","exit","applyDefaultProjectionOptions","projectorOptions","checkStyleValue","styleValue","setProperties","projectionOptions","propNames","propCount","_loop_1","propName","propValue","split","token","classList","add","classNames","classNameCount","j","className","styleNames","styleCount","type","lastIndexOf","oldPropValue","evt","apply","target","setAttributeNS","setAttribute","updateProperties","previousProperties","propertiesUpdated","previousValue","on","previousOn","remove","newStyleValue","oldStyleValue","domValue","removeAttribute","findIndexOfChild","sameAs","start","nodeAdded","vNode","enterAnimation","nodeToRemove","exitAnimation","pointerEvents","removeDomNode","parentNode","removeChild","checkDistinguishable","childNodes","indexToCheck","parentVNode","operation","childNode","node","createDom","updateDom","updateChildren","vnode","oldChildren","newChildren","oldChildrenLength","newChildrenLength","oldIndex","newIndex","textUpdated","oldChild","newChild","findOldIndex","addChildren","initPropertiesAndChildren","textContent","afterCreate","insertNode","beforeNode","insertBefore","appendChild","customElementRegex","c","found","delayAttach","test","doc","ownerDocument","createTextNode","charAt","slice","id","createElementNS","createElement","previous","updated","newVNode","replaceChild","firstChild","afterUpdate","updateAnimation","createProjection","update","updatedVnode","h","selector","arguments","childIndex","argsLength","onlyChild","child","dom","create","document","append","merge","element","replace","createCache","cachedInputs","cachedOutcome","invalidate","inputs","calculation","createMapping","getSourceKey","createResult","updateResult","results","map","newSources","newKeys","oldTargets","source","sourceKey","searchIndex","createProjector","projector","propertyName","eventHandler","scheduleRender","renderCompleted","scheduled","stopped","projections","renderFunctions","doRender","renderNow","requestAnimationFrame","stop","cancelAnimationFrame","resume","renderMaquetteFunction","detach","splice"],"mappings":"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","file":"maquette.js","sourcesContent":["\"use strict\";\n// Comment that is displayed in the API documentation for the maquette module:\n/**\n * Welcome to the API documentation of the **maquette** library.\n *\n * [[http://maquettejs.org/|To the maquette homepage]]\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NAMESPACE_W3 = 'http://www.w3.org/';\nvar NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nvar NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\n// Utilities\nvar emptyArray = [];\nvar extend = function (base, overrides) {\n    var result = {};\n    Object.keys(base).forEach(function (key) {\n        result[key] = base[key];\n    });\n    if (overrides) {\n        Object.keys(overrides).forEach(function (key) {\n            result[key] = overrides[key];\n        });\n    }\n    return result;\n};\n// Hyperscript helper functions\nvar same = function (vnode1, vnode2) {\n    if (vnode1.vnodeSelector !== vnode2.vnodeSelector) {\n        return false;\n    }\n    if (vnode1.properties && vnode2.properties) {\n        if (vnode1.properties.key !== vnode2.properties.key) {\n            return false;\n        }\n        return vnode1.properties.bind === vnode2.properties.bind;\n    }\n    return !vnode1.properties && !vnode2.properties;\n};\nvar toTextVNode = function (data) {\n    return {\n        vnodeSelector: '',\n        properties: undefined,\n        children: undefined,\n        text: data.toString(),\n        domNode: null\n    };\n};\nvar appendChildren = function (parentSelector, insertions, main) {\n    for (var i = 0, length_1 = insertions.length; i < length_1; i++) {\n        var item = insertions[i];\n        if (Array.isArray(item)) {\n            appendChildren(parentSelector, item, main);\n        }\n        else {\n            if (item !== null && item !== undefined) {\n                if (!item.hasOwnProperty('vnodeSelector')) {\n                    item = toTextVNode(item);\n                }\n                main.push(item);\n            }\n        }\n    }\n};\n// Render helper functions\nvar missingTransition = function () {\n    throw new Error('Provide a transitions object to the projectionOptions to do animations');\n};\nvar DEFAULT_PROJECTION_OPTIONS = {\n    namespace: undefined,\n    eventHandlerInterceptor: undefined,\n    styleApplyer: function (domNode, styleName, value) {\n        // Provides a hook to add vendor prefixes for browsers that still need it.\n        domNode.style[styleName] = value;\n    },\n    transitions: {\n        enter: missingTransition,\n        exit: missingTransition\n    }\n};\nvar applyDefaultProjectionOptions = function (projectorOptions) {\n    return extend(DEFAULT_PROJECTION_OPTIONS, projectorOptions);\n};\nvar checkStyleValue = function (styleValue) {\n    if (typeof styleValue !== 'string') {\n        throw new Error('Style values must be strings');\n    }\n};\nvar setProperties = function (domNode, properties, projectionOptions) {\n    if (!properties) {\n        return;\n    }\n    var eventHandlerInterceptor = projectionOptions.eventHandlerInterceptor;\n    var propNames = Object.keys(properties);\n    var propCount = propNames.length;\n    var _loop_1 = function (i) {\n        var propName = propNames[i];\n        /* tslint:disable:no-var-keyword: edge case */\n        var propValue = properties[propName];\n        /* tslint:enable:no-var-keyword */\n        if (propName === 'className') {\n            throw new Error('Property \"className\" is not supported, use \"class\".');\n        }\n        else if (propName === 'class') {\n            propValue.split(/\\s+/).forEach(function (token) { return domNode.classList.add(token); });\n        }\n        else if (propName === 'classes') {\n            // object with string keys and boolean values\n            var classNames = Object.keys(propValue);\n            var classNameCount = classNames.length;\n            for (var j = 0; j < classNameCount; j++) {\n                var className = classNames[j];\n                if (propValue[className]) {\n                    domNode.classList.add(className);\n                }\n            }\n        }\n        else if (propName === 'styles') {\n            // object with string keys and string (!) values\n            var styleNames = Object.keys(propValue);\n            var styleCount = styleNames.length;\n            for (var j = 0; j < styleCount; j++) {\n                var styleName = styleNames[j];\n                var styleValue = propValue[styleName];\n                if (styleValue) {\n                    checkStyleValue(styleValue);\n                    projectionOptions.styleApplyer(domNode, styleName, styleValue);\n                }\n            }\n        }\n        else if (propName !== 'key' && propValue !== null && propValue !== undefined) {\n            var type = typeof propValue;\n            if (type === 'function') {\n                if (propName.lastIndexOf('on', 0) === 0) {\n                    if (eventHandlerInterceptor) {\n                        propValue = eventHandlerInterceptor(propName, propValue, domNode, properties); // intercept eventhandlers\n                    }\n                    if (propName === 'oninput') {\n                        (function () {\n                            // record the evt.target.value, because IE and Edge sometimes do a requestAnimationFrame between changing value and running oninput\n                            var oldPropValue = propValue;\n                            propValue = function (evt) {\n                                oldPropValue.apply(this, [evt]);\n                                evt.target['oninput-value'] = evt.target.value; // may be HTMLTextAreaElement as well\n                            };\n                        }());\n                    }\n                    domNode[propName] = propValue;\n                }\n            }\n            else if (type === 'string' && propName !== 'value' && propName !== 'innerHTML') {\n                if (projectionOptions.namespace === NAMESPACE_SVG && propName === 'href') {\n                    domNode.setAttributeNS(NAMESPACE_XLINK, propName, propValue);\n                }\n                else {\n                    domNode.setAttribute(propName, propValue);\n                }\n            }\n            else {\n                domNode[propName] = propValue;\n            }\n        }\n    };\n    for (var i = 0; i < propCount; i++) {\n        _loop_1(i);\n    }\n};\nvar updateProperties = function (domNode, previousProperties, properties, projectionOptions) {\n    if (!properties) {\n        return;\n    }\n    var propertiesUpdated = false;\n    var propNames = Object.keys(properties);\n    var propCount = propNames.length;\n    for (var i = 0; i < propCount; i++) {\n        var propName = propNames[i];\n        // assuming that properties will be nullified instead of missing is by design\n        var propValue = properties[propName];\n        var previousValue = previousProperties[propName];\n        if (propName === 'class') {\n            if (previousValue !== propValue) {\n                throw new Error('\"class\" property may not be updated. Use the \"classes\" property for conditional css classes.');\n            }\n        }\n        else if (propName === 'classes') {\n            var classList = domNode.classList;\n            var classNames = Object.keys(propValue);\n            var classNameCount = classNames.length;\n            for (var j = 0; j < classNameCount; j++) {\n                var className = classNames[j];\n                var on = !!propValue[className];\n                var previousOn = !!previousValue[className];\n                if (on === previousOn) {\n                    continue;\n                }\n                propertiesUpdated = true;\n                if (on) {\n                    classList.add(className);\n                }\n                else {\n                    classList.remove(className);\n                }\n            }\n        }\n        else if (propName === 'styles') {\n            var styleNames = Object.keys(propValue);\n            var styleCount = styleNames.length;\n            for (var j = 0; j < styleCount; j++) {\n                var styleName = styleNames[j];\n                var newStyleValue = propValue[styleName];\n                var oldStyleValue = previousValue[styleName];\n                if (newStyleValue === oldStyleValue) {\n                    continue;\n                }\n                propertiesUpdated = true;\n                if (newStyleValue) {\n                    checkStyleValue(newStyleValue);\n                    projectionOptions.styleApplyer(domNode, styleName, newStyleValue);\n                }\n                else {\n                    projectionOptions.styleApplyer(domNode, styleName, '');\n                }\n            }\n        }\n        else {\n            if (!propValue && typeof previousValue === 'string') {\n                propValue = '';\n            }\n            if (propName === 'value') {\n                var domValue = domNode[propName];\n                if (domValue !== propValue // The 'value' in the DOM tree !== newValue\n                    && (domNode['oninput-value']\n                        ? domValue === domNode['oninput-value'] // If the last reported value to 'oninput' does not match domValue, do nothing and wait for oninput\n                        : propValue !== previousValue // Only update the value if the vdom changed\n                    )) {\n                    domNode[propName] = propValue; // Reset the value, even if the virtual DOM did not change\n                    domNode['oninput-value'] = undefined;\n                } // else do not update the domNode, otherwise the cursor position would be changed\n                if (propValue !== previousValue) {\n                    propertiesUpdated = true;\n                }\n            }\n            else if (propValue !== previousValue) {\n                var type = typeof propValue;\n                if (type === 'function') {\n                    throw new Error('Functions may not be updated on subsequent renders (property: ' + propName +\n                        '). Hint: declare event handler functions outside the render() function.');\n                }\n                if (type === 'string' && propName !== 'innerHTML') {\n                    if (projectionOptions.namespace === NAMESPACE_SVG && propName === 'href') {\n                        domNode.setAttributeNS(NAMESPACE_XLINK, propName, propValue);\n                    }\n                    else if (propName === 'role' && propValue === '') {\n                        domNode.removeAttribute(propName);\n                    }\n                    else {\n                        domNode.setAttribute(propName, propValue);\n                    }\n                }\n                else {\n                    if (domNode[propName] !== propValue) {\n                        domNode[propName] = propValue;\n                    }\n                }\n                propertiesUpdated = true;\n            }\n        }\n    }\n    return propertiesUpdated;\n};\nvar findIndexOfChild = function (children, sameAs, start) {\n    if (sameAs.vnodeSelector !== '') {\n        // Never scan for text-nodes\n        for (var i = start; i < children.length; i++) {\n            if (same(children[i], sameAs)) {\n                return i;\n            }\n        }\n    }\n    return -1;\n};\nvar nodeAdded = function (vNode, transitions) {\n    if (vNode.properties) {\n        var enterAnimation = vNode.properties.enterAnimation;\n        if (enterAnimation) {\n            if (typeof enterAnimation === 'function') {\n                enterAnimation(vNode.domNode, vNode.properties);\n            }\n            else {\n                transitions.enter(vNode.domNode, vNode.properties, enterAnimation);\n            }\n        }\n    }\n};\nvar nodeToRemove = function (vNode, transitions) {\n    var domNode = vNode.domNode;\n    if (vNode.properties) {\n        var exitAnimation = vNode.properties.exitAnimation;\n        if (exitAnimation) {\n            domNode.style.pointerEvents = 'none';\n            var removeDomNode = function () {\n                if (domNode.parentNode) {\n                    domNode.parentNode.removeChild(domNode);\n                }\n            };\n            if (typeof exitAnimation === 'function') {\n                exitAnimation(domNode, removeDomNode, vNode.properties);\n                return;\n            }\n            else {\n                transitions.exit(vNode.domNode, vNode.properties, exitAnimation, removeDomNode);\n                return;\n            }\n        }\n    }\n    if (domNode.parentNode) {\n        domNode.parentNode.removeChild(domNode);\n    }\n};\nvar checkDistinguishable = function (childNodes, indexToCheck, parentVNode, operation) {\n    var childNode = childNodes[indexToCheck];\n    if (childNode.vnodeSelector === '') {\n        return; // Text nodes need not be distinguishable\n    }\n    var properties = childNode.properties;\n    var key = properties ? (properties.key === undefined ? properties.bind : properties.key) : undefined;\n    if (!key) {\n        for (var i = 0; i < childNodes.length; i++) {\n            if (i !== indexToCheck) {\n                var node = childNodes[i];\n                if (same(node, childNode)) {\n                    if (operation === 'added') {\n                        throw new Error(parentVNode.vnodeSelector + ' had a ' + childNode.vnodeSelector + ' child ' +\n                            'added, but there is now more than one. You must add unique key properties to make them distinguishable.');\n                    }\n                    else {\n                        throw new Error(parentVNode.vnodeSelector + ' had a ' + childNode.vnodeSelector + ' child ' +\n                            'removed, but there were more than one. You must add unique key properties to make them distinguishable.');\n                    }\n                }\n            }\n        }\n    }\n};\nvar createDom;\nvar updateDom;\nvar updateChildren = function (vnode, domNode, oldChildren, newChildren, projectionOptions) {\n    if (oldChildren === newChildren) {\n        return false;\n    }\n    oldChildren = oldChildren || emptyArray;\n    newChildren = newChildren || emptyArray;\n    var oldChildrenLength = oldChildren.length;\n    var newChildrenLength = newChildren.length;\n    var transitions = projectionOptions.transitions;\n    var oldIndex = 0;\n    var newIndex = 0;\n    var i;\n    var textUpdated = false;\n    while (newIndex < newChildrenLength) {\n        var oldChild = (oldIndex < oldChildrenLength) ? oldChildren[oldIndex] : undefined;\n        var newChild = newChildren[newIndex];\n        if (oldChild !== undefined && same(oldChild, newChild)) {\n            textUpdated = updateDom(oldChild, newChild, projectionOptions) || textUpdated;\n            oldIndex++;\n        }\n        else {\n            var findOldIndex = findIndexOfChild(oldChildren, newChild, oldIndex + 1);\n            if (findOldIndex >= 0) {\n                // Remove preceding missing children\n                for (i = oldIndex; i < findOldIndex; i++) {\n                    nodeToRemove(oldChildren[i], transitions);\n                    checkDistinguishable(oldChildren, i, vnode, 'removed');\n                }\n                textUpdated = updateDom(oldChildren[findOldIndex], newChild, projectionOptions) || textUpdated;\n                oldIndex = findOldIndex + 1;\n            }\n            else {\n                // New child\n                createDom(newChild, domNode, (oldIndex < oldChildrenLength) ? oldChildren[oldIndex].domNode : undefined, projectionOptions);\n                nodeAdded(newChild, transitions);\n                checkDistinguishable(newChildren, newIndex, vnode, 'added');\n            }\n        }\n        newIndex++;\n    }\n    if (oldChildrenLength > oldIndex) {\n        // Remove child fragments\n        for (i = oldIndex; i < oldChildrenLength; i++) {\n            nodeToRemove(oldChildren[i], transitions);\n            checkDistinguishable(oldChildren, i, vnode, 'removed');\n        }\n    }\n    return textUpdated;\n};\nvar addChildren = function (domNode, children, projectionOptions) {\n    if (!children) {\n        return;\n    }\n    for (var i = 0; i < children.length; i++) {\n        createDom(children[i], domNode, undefined, projectionOptions);\n    }\n};\nvar initPropertiesAndChildren = function (domNode, vnode, projectionOptions) {\n    addChildren(domNode, vnode.children, projectionOptions); // children before properties, needed for value property of <select>.\n    if (vnode.text) {\n        domNode.textContent = vnode.text;\n    }\n    setProperties(domNode, vnode.properties, projectionOptions);\n    if (vnode.properties && vnode.properties.afterCreate) {\n        vnode.properties.afterCreate.apply(vnode.properties.bind || vnode.properties, [domNode, projectionOptions, vnode.vnodeSelector, vnode.properties, vnode.children]);\n    }\n};\nvar insertNode = function (parentNode, domNode, vnode, beforeNode) {\n    if (beforeNode) {\n        parentNode.insertBefore(domNode, beforeNode);\n    }\n    else if (domNode.parentNode !== parentNode) {\n        parentNode.appendChild(domNode);\n    }\n};\n/**\n * Identifies custom element tags as defined in custom elements v1 draft spec\n *\n * @see https://www.w3.org/TR/custom-elements/#custom-elements-core-concepts\n */\nvar customElementRegex = /^[a-z][^-]*-/;\ncreateDom = function (vnode, parentNode, insertBefore, projectionOptions) {\n    var domNode, i, c, start = 0, type, found;\n    var vnodeSelector = vnode.vnodeSelector;\n    var delayAttach = customElementRegex.test(vnodeSelector);\n    var doc = parentNode.ownerDocument;\n    if (vnodeSelector === '') {\n        domNode = vnode.domNode = doc.createTextNode(vnode.text);\n        insertNode(parentNode, domNode, vnode, insertBefore);\n    }\n    else {\n        for (i = 0; i <= vnodeSelector.length; ++i) {\n            c = vnodeSelector.charAt(i);\n            if (i === vnodeSelector.length || c === '.' || c === '#') {\n                type = vnodeSelector.charAt(start - 1);\n                found = vnodeSelector.slice(start, i);\n                if (type === '.') {\n                    domNode.classList.add(found);\n                }\n                else if (type === '#') {\n                    domNode.id = found;\n                }\n                else {\n                    if (found === 'svg') {\n                        projectionOptions = extend(projectionOptions, { namespace: NAMESPACE_SVG });\n                    }\n                    if (projectionOptions.namespace !== undefined) {\n                        domNode = vnode.domNode = doc.createElementNS(projectionOptions.namespace, found);\n                    }\n                    else {\n                        domNode = vnode.domNode = (vnode.domNode || doc.createElement(found));\n                        if (found === 'input' && vnode.properties && vnode.properties.type !== undefined) {\n                            // IE8 and older don't support setting input type after the DOM Node has been added to the document\n                            domNode.setAttribute('type', vnode.properties.type);\n                        }\n                    }\n                    if (!delayAttach) {\n                        insertNode(parentNode, domNode, vnode, insertBefore);\n                    }\n                }\n                start = i + 1;\n            }\n        }\n        initPropertiesAndChildren(domNode, vnode, projectionOptions);\n        if (delayAttach) {\n            insertNode(parentNode, domNode, vnode, insertBefore);\n        }\n    }\n};\nupdateDom = function (previous, vnode, projectionOptions) {\n    var domNode = previous.domNode;\n    var textUpdated = false;\n    if (previous === vnode) {\n        return false; // By contract, VNode objects may not be modified anymore after passing them to maquette\n    }\n    var updated = false;\n    if (vnode.vnodeSelector === '') {\n        if (vnode.text !== previous.text) {\n            var newVNode = domNode.ownerDocument.createTextNode(vnode.text);\n            domNode.parentNode.replaceChild(newVNode, domNode);\n            vnode.domNode = newVNode;\n            textUpdated = true;\n            return textUpdated;\n        }\n    }\n    else {\n        if (vnode.vnodeSelector.lastIndexOf('svg', 0) === 0) {\n            projectionOptions = extend(projectionOptions, { namespace: NAMESPACE_SVG });\n        }\n        if (previous.text !== vnode.text) {\n            updated = true;\n            if (vnode.text === undefined) {\n                domNode.removeChild(domNode.firstChild); // the only textnode presumably\n            }\n            else {\n                domNode.textContent = vnode.text;\n            }\n        }\n        updated = updateChildren(vnode, domNode, previous.children, vnode.children, projectionOptions) || updated;\n        updated = updateProperties(domNode, previous.properties, vnode.properties, projectionOptions) || updated;\n        if (vnode.properties && vnode.properties.afterUpdate) {\n            vnode.properties.afterUpdate.apply(vnode.properties.bind || vnode.properties, [domNode, projectionOptions, vnode.vnodeSelector, vnode.properties, vnode.children]);\n        }\n    }\n    if (updated && vnode.properties && vnode.properties.updateAnimation) {\n        vnode.properties.updateAnimation(domNode, vnode.properties, previous.properties);\n    }\n    vnode.domNode = previous.domNode;\n    return textUpdated;\n};\nvar createProjection = function (vnode, projectionOptions) {\n    return {\n        update: function (updatedVnode) {\n            if (vnode.vnodeSelector !== updatedVnode.vnodeSelector) {\n                throw new Error('The selector for the root VNode may not be changed. (consider using dom.merge and add one extra level to the virtual DOM)');\n            }\n            updateDom(vnode, updatedVnode, projectionOptions);\n            vnode = updatedVnode;\n        },\n        domNode: vnode.domNode\n    };\n};\n// The other two parameters are not added here, because the Typescript compiler creates surrogate code for destructuring 'children'.\nexports.h = function (selector) {\n    var properties = arguments[1];\n    if (typeof selector !== 'string') {\n        throw new Error();\n    }\n    var childIndex = 1;\n    if (properties && !properties.hasOwnProperty('vnodeSelector') && !Array.isArray(properties) && typeof properties === 'object') {\n        childIndex = 2;\n    }\n    else {\n        // Optional properties argument was omitted\n        properties = undefined;\n    }\n    var text;\n    var children;\n    var argsLength = arguments.length;\n    // Recognize a common special case where there is only a single text node\n    if (argsLength === childIndex + 1) {\n        var onlyChild = arguments[childIndex];\n        if (typeof onlyChild === 'string') {\n            text = onlyChild;\n        }\n        else if (onlyChild !== undefined && onlyChild !== null && onlyChild.length === 1 && typeof onlyChild[0] === 'string') {\n            text = onlyChild[0];\n        }\n    }\n    if (text === undefined) {\n        children = [];\n        for (; childIndex < argsLength; childIndex++) {\n            var child = arguments[childIndex];\n            if (child === null || child === undefined) {\n            }\n            else if (Array.isArray(child)) {\n                appendChildren(selector, child, children);\n            }\n            else if (child.hasOwnProperty('vnodeSelector')) {\n                children.push(child);\n            }\n            else {\n                children.push(toTextVNode(child));\n            }\n        }\n    }\n    return {\n        vnodeSelector: selector,\n        properties: properties,\n        children: children,\n        text: (text === '') ? undefined : text,\n        domNode: null\n    };\n};\n/**\n * Contains simple low-level utility functions to manipulate the real DOM.\n */\nexports.dom = {\n    /**\n     * Creates a real DOM tree from `vnode`. The [[Projection]] object returned will contain the resulting DOM Node in\n     * its [[Projection.domNode|domNode]] property.\n     * This is a low-level method. Users will typically use a [[Projector]] instead.\n     * @param vnode - The root of the virtual DOM tree that was created using the [[h]] function. NOTE: [[VNode]]\n     * objects may only be rendered once.\n     * @param projectionOptions - Options to be used to create and update the projection.\n     * @returns The [[Projection]] which also contains the DOM Node that was created.\n     */\n    create: function (vnode, projectionOptions) {\n        projectionOptions = applyDefaultProjectionOptions(projectionOptions);\n        createDom(vnode, document.createElement('div'), undefined, projectionOptions);\n        return createProjection(vnode, projectionOptions);\n    },\n    /**\n     * Appends a new child node to the DOM which is generated from a [[VNode]].\n     * This is a low-level method. Users will typically use a [[Projector]] instead.\n     * @param parentNode - The parent node for the new child node.\n     * @param vnode - The root of the virtual DOM tree that was created using the [[h]] function. NOTE: [[VNode]]\n     * objects may only be rendered once.\n     * @param projectionOptions - Options to be used to create and update the [[Projection]].\n     * @returns The [[Projection]] that was created.\n     */\n    append: function (parentNode, vnode, projectionOptions) {\n        projectionOptions = applyDefaultProjectionOptions(projectionOptions);\n        createDom(vnode, parentNode, undefined, projectionOptions);\n        return createProjection(vnode, projectionOptions);\n    },\n    /**\n     * Inserts a new DOM node which is generated from a [[VNode]].\n     * This is a low-level method. Users wil typically use a [[Projector]] instead.\n     * @param beforeNode - The node that the DOM Node is inserted before.\n     * @param vnode - The root of the virtual DOM tree that was created using the [[h]] function.\n     * NOTE: [[VNode]] objects may only be rendered once.\n     * @param projectionOptions - Options to be used to create and update the projection, see [[createProjector]].\n     * @returns The [[Projection]] that was created.\n     */\n    insertBefore: function (beforeNode, vnode, projectionOptions) {\n        projectionOptions = applyDefaultProjectionOptions(projectionOptions);\n        createDom(vnode, beforeNode.parentNode, beforeNode, projectionOptions);\n        return createProjection(vnode, projectionOptions);\n    },\n    /**\n     * Merges a new DOM node which is generated from a [[VNode]] with an existing DOM Node.\n     * This means that the virtual DOM and the real DOM will have one overlapping element.\n     * Therefore the selector for the root [[VNode]] will be ignored, but its properties and children will be applied to the Element provided.\n     * This is a low-level method. Users wil typically use a [[Projector]] instead.\n     * @param element - The existing element to adopt as the root of the new virtual DOM. Existing attributes and child nodes are preserved.\n     * @param vnode - The root of the virtual DOM tree that was created using the [[h]] function. NOTE: [[VNode]] objects\n     * may only be rendered once.\n     * @param projectionOptions - Options to be used to create and update the projection, see [[createProjector]].\n     * @returns The [[Projection]] that was created.\n     */\n    merge: function (element, vnode, projectionOptions) {\n        projectionOptions = applyDefaultProjectionOptions(projectionOptions);\n        vnode.domNode = element;\n        initPropertiesAndChildren(element, vnode, projectionOptions);\n        return createProjection(vnode, projectionOptions);\n    },\n    /**\n     * Replaces an existing DOM node with a node generated from a [[VNode]].\n     * This is a low-level method. Users will typically use a [[Projector]] instead.\n     * @param element - The node for the [[VNode]] to replace.\n     * @param vnode - The root of the virtual DOM tree that was created using the [[h]] function. NOTE: [[VNode]]\n     * objects may only be rendered once.\n     * @param projectionOptions - Options to be used to create and update the [[Projection]].\n     * @returns The [[Projection]] that was created.\n     */\n    replace: function (element, vnode, projectionOptions) {\n        projectionOptions = applyDefaultProjectionOptions(projectionOptions);\n        createDom(vnode, element.parentNode, element, projectionOptions);\n        element.parentNode.removeChild(element);\n        return createProjection(vnode, projectionOptions);\n    }\n};\n/**\n * Creates a [[CalculationCache]] object, useful for caching [[VNode]] trees.\n * In practice, caching of [[VNode]] trees is not needed, because achieving 60 frames per second is almost never a problem.\n * For more information, see [[CalculationCache]].\n *\n * @param <Result> The type of the value that is cached.\n */\nexports.createCache = function () {\n    var cachedInputs;\n    var cachedOutcome;\n    return {\n        invalidate: function () {\n            cachedOutcome = undefined;\n            cachedInputs = undefined;\n        },\n        result: function (inputs, calculation) {\n            if (cachedInputs) {\n                for (var i = 0; i < inputs.length; i++) {\n                    if (cachedInputs[i] !== inputs[i]) {\n                        cachedOutcome = undefined;\n                    }\n                }\n            }\n            if (!cachedOutcome) {\n                cachedOutcome = calculation();\n                cachedInputs = inputs;\n            }\n            return cachedOutcome;\n        }\n    };\n};\n/**\n * Creates a {@link Mapping} instance that keeps an array of result objects synchronized with an array of source objects.\n * See {@link http://maquettejs.org/docs/arrays.html|Working with arrays}.\n *\n * @param <Source>       The type of source items. A database-record for instance.\n * @param <Target>       The type of target items. A [[Component]] for instance.\n * @param getSourceKey   `function(source)` that must return a key to identify each source object. The result must either be a string or a number.\n * @param createResult   `function(source, index)` that must create a new result object from a given source. This function is identical\n *                       to the `callback` argument in `Array.map(callback)`.\n * @param updateResult   `function(source, target, index)` that updates a result to an updated source.\n */\nexports.createMapping = function (getSourceKey, createResult, updateResult) {\n    var keys = [];\n    var results = [];\n    return {\n        results: results,\n        map: function (newSources) {\n            var newKeys = newSources.map(getSourceKey);\n            var oldTargets = results.slice();\n            var oldIndex = 0;\n            for (var i = 0; i < newSources.length; i++) {\n                var source = newSources[i];\n                var sourceKey = newKeys[i];\n                if (sourceKey === keys[oldIndex]) {\n                    results[i] = oldTargets[oldIndex];\n                    updateResult(source, oldTargets[oldIndex], i);\n                    oldIndex++;\n                }\n                else {\n                    var found = false;\n                    for (var j = 1; j < keys.length + 1; j++) {\n                        var searchIndex = (oldIndex + j) % keys.length;\n                        if (keys[searchIndex] === sourceKey) {\n                            results[i] = oldTargets[searchIndex];\n                            updateResult(newSources[i], oldTargets[searchIndex], i);\n                            oldIndex = searchIndex + 1;\n                            found = true;\n                            break;\n                        }\n                    }\n                    if (!found) {\n                        results[i] = createResult(source, i);\n                    }\n                }\n            }\n            results.length = newSources.length;\n            keys = newKeys;\n        }\n    };\n};\n/**\n * Creates a [[Projector]] instance using the provided projectionOptions.\n *\n * For more information, see [[Projector]].\n *\n * @param projectorOptions   Options that influence how the DOM is rendered and updated.\n */\nexports.createProjector = function (projectorOptions) {\n    var projector;\n    var projectionOptions = applyDefaultProjectionOptions(projectorOptions);\n    projectionOptions.eventHandlerInterceptor = function (propertyName, eventHandler, domNode, properties) {\n        return function () {\n            // intercept function calls (event handlers) to do a render afterwards.\n            projector.scheduleRender();\n            return eventHandler.apply(properties.bind || this, arguments);\n        };\n    };\n    var renderCompleted = true;\n    var scheduled;\n    var stopped = false;\n    var projections = [];\n    var renderFunctions = []; // matches the projections array\n    var doRender = function () {\n        scheduled = undefined;\n        if (!renderCompleted) {\n            return; // The last render threw an error, it should be logged in the browser console.\n        }\n        renderCompleted = false;\n        for (var i = 0; i < projections.length; i++) {\n            var updatedVnode = renderFunctions[i]();\n            projections[i].update(updatedVnode);\n        }\n        renderCompleted = true;\n    };\n    projector = {\n        renderNow: doRender,\n        scheduleRender: function () {\n            if (!scheduled && !stopped) {\n                scheduled = requestAnimationFrame(doRender);\n            }\n        },\n        stop: function () {\n            if (scheduled) {\n                cancelAnimationFrame(scheduled);\n                scheduled = undefined;\n            }\n            stopped = true;\n        },\n        resume: function () {\n            stopped = false;\n            renderCompleted = true;\n            projector.scheduleRender();\n        },\n        append: function (parentNode, renderMaquetteFunction) {\n            projections.push(exports.dom.append(parentNode, renderMaquetteFunction(), projectionOptions));\n            renderFunctions.push(renderMaquetteFunction);\n        },\n        insertBefore: function (beforeNode, renderMaquetteFunction) {\n            projections.push(exports.dom.insertBefore(beforeNode, renderMaquetteFunction(), projectionOptions));\n            renderFunctions.push(renderMaquetteFunction);\n        },\n        merge: function (domNode, renderMaquetteFunction) {\n            projections.push(exports.dom.merge(domNode, renderMaquetteFunction(), projectionOptions));\n            renderFunctions.push(renderMaquetteFunction);\n        },\n        replace: function (domNode, renderMaquetteFunction) {\n            projections.push(exports.dom.replace(domNode, renderMaquetteFunction(), projectionOptions));\n            renderFunctions.push(renderMaquetteFunction);\n        },\n        detach: function (renderMaquetteFunction) {\n            for (var i = 0; i < renderFunctions.length; i++) {\n                if (renderFunctions[i] === renderMaquetteFunction) {\n                    renderFunctions.splice(i, 1);\n                    return projections.splice(i, 1)[0];\n                }\n            }\n            throw new Error('renderMaquetteFunction was not found');\n        }\n    };\n    return projector;\n};\n\n//# sourceMappingURL=maquette.js.map\n"]}